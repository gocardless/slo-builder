---
definitions:
  - template: BatchProcessingSLO
    definition:
      name: MarkPaymentsAsPaidMeetsDeadline
      budget: 0.1
      deadline: 2h
      volume: |
        1.5 * max_over_time(
          (
            sum by (namespace, release) (
              increase(paysvc_mark_payments_as_paid_marked_as_paid_total[8h])
            )
          )[60d:1h]
        )
      throughput: |
        sum by (namespace, release) (
          rate(paysvc_mark_payments_as_paid_marked_as_paid_total[1m])
        ) > 0
      labels:
        channel: slo-alerts

  - template: ErrorRateSLO
    definition:
      name: PaymentsServiceSearchErrors
      budget: 0.001
      errors: |
        sum by (namespace, release) (
          rate(http_request_duration_seconds_count{app="payments-service", handler=~"Routes::(Admin)?Search", status=~"5.."}[%s])
        )
      total: |
        sum by (namespace, release) (
          rate(http_request_duration_seconds_count{app="payments-service", handler=~"Routes::(Admin)?Search"}[%s])
        )
      labels:
        channel: slo-alerts
      annotations:
        summary: |
          Annotations can show up.

          Random runbook chosen.
        runbook: https://backstage.gocardless.io/catalog/default/component/data-contracts/docs/runbook/stevelogs-data-contract-event-publish-failure/
        dashboard: v2czLVxmk
  - template: LatencySLO
    definition:
      name: AdminVerificationLatency90
      budget: 0.1
      requestClass: "1"
      total: |
        sum by (namespace, release) (
          rate(http_request_duration_seconds_count{app="payments-service", handler="Routes::AdminVerifications::Index"}[%s])
        )
      observation: |
        sum by (namespace, release) (
          rate(http_request_duration_seconds_bucket{app="payments-service", handler="Routes::AdminVerifications::Index", le="%s"}[%s])
        )

  - template: LatencySLO
    definition:
      name: AdminVerificationLatency99
      budget: 0.01
      requestClass: "2.5"
      total: |
        sum by (namespace, release) (
          rate(http_request_duration_seconds_count{app="payments-service", handler="Routes::AdminVerifications::Index"}[%s])
        )
      observation: |
        sum by (namespace, release) (
          rate(http_request_duration_seconds_bucket{app="payments-service", handler="Routes::AdminVerifications::Index", le="%s"}[%s])
        )
      labels:
        channel: slo-alerts
